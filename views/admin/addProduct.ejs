<%- include('../adminLayouts/header.ejs') -%>
<div class="page-body">

  <!-- New Product Add Start -->
  <div class="container-fluid">
    <div class="row">
      <div class="col-12">
        <div class="row">
          <div class="col-sm-8 m-auto">
            <div class="card">
              <div class="card-body">
                <div class="card-header-2">
                  <h5>Product Information</h5>
                </div>

                <form class="theme-form theme-form-2 mega-form" method="post" id="productForm" enctype="multipart/form-data">
                  <div class="mb-4 row align-items-center">
                    <label class="form-label-title col-sm-3 mb-0">Product
                      Name</label>
                    <div class="col-sm-9">
                      <input class="form-control" name="productName" type="text" id="productNameField" placeholder="Product Name">
                      <p id="pNameAlert" style="color: red;"></p>
                    </div>
                  </div>
                  <div class="mb-4 row align-items-center">
                    <label class="form-label-title col-sm-3 mb-0">Product
                      Price</label>
                    <div class="col-sm-9">
                      <input class="form-control" name="productPrice" type="text" id="productPriceField" placeholder="Product Price">
                      <p id="pPriceAlert" style="color: red;"></p>
                    </div>
                  </div>


                  <div class="mb-4 row align-items-center">
                    <label class="col-sm-3 col-form-label form-label-title">Category</label>
                    <div class="col-sm-9">
                      <select class="js-example-basic-single w-100" name="category">
                        <option disabled>Category Menu</option>
                        <% categoryData.forEach(category => { %>
                        <option value="<%= category.category %>"><%= category.category %></option>
                        <% }) %>
                      </select>
                    </div>
                  </div>

                  <div class="mb-4 row align-items-center">
                    <label class="form-label-title col-sm-3 mb-0">Product
                      Quantity</label>
                    <div class="col-sm-9">
                      <input class="form-control" name="quantity" type="number" id="productQuantityField" placeholder="Product Quantity">
                      <p id="pQuantityAlert" style="color: red;"></p>
                    </div>
                  </div>

                  <div class="mb-4 row align-items-center">
                    <label class="col-sm-3 col-form-label form-label-title">Size</label>
                    <div class="col-sm-9">
                      <select class="js-example-basic-single w-100" name="size">
                        <option disabled>Select Size</option>
                        <option>M</option>
                        <option>L </option>
                        <option>XL</option>
                        <option>XXL</option>
                        <option>XXXL</option>
                      </select>
                    </div>
                  </div>

                  <div class="mb-4 row align-items-center">
                    <label class="col-sm-3 col-form-label form-label-title">Color</label>
                    <div class="col-sm-9">
                      <select class="js-example-basic-single w-100" name="color">
                        <option disabled>Select Color</option>
                        <option>Red</option>
                        <option>White</option>
                        <option>Blue</option>
                        <option>Black</option>
                      </select>
                    </div>
                  </div>
              </div>
            </div>

            <div class="card">
              <div class="card-body">
                <div class="card-header-2">
                  <h5>Description</h5>
                </div>
                <div class="row">
                  <div class="col-12">
                    <div class="row">
                      <label class="form-label-title col-sm-3 mb-0">Product
                        Description</label>
                      <div class="col-sm-9">
                        <textarea class="form-control" name="description" rows="3"></textarea>
                        <p id="wordCountDisplay" class="text-muted">Word Count: 0/100</p>
                        <p id="pDescriptionAlert" style="color: red;"></p>

                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <div class="card">
              <div class="card-body">
                <div class="card-header-2">
                  <h5>Product Images</h5>
                </div>

                <div class="mb-4 row align-items-center">
                  <label class="col-sm-3 col-form-label form-label-title">Images</label>
                  <div class="col-sm-9">
                    <input class="form-control form-choose" name="images" type="file" id="formFile" multiple>
                  </div>
                </div>
                <div class="mb-4 row align-items-center">
                  <div class="col-sm-3"></div>
                  <div class="col-sm-9">
                    <button type="submit" class="btn btn-primary">Submit</button>
                  </div>
                </div>
                </form>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <!-- New Product Add End -->

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      let productForm = document.getElementById('productForm');
      let productName = document.getElementById('productNameField');
      let pNameAlert = document.getElementById('pNameAlert');
      let productPrice = document.getElementById('productPriceField');
      let pPriceAlert = document.getElementById('pPriceAlert');
      let productQuantity = document.getElementById('productQuantityField');
      let pQuantityAlert = document.getElementById('pQuantityAlert');
      let pDescription = document.querySelector('textarea[name="description"]');
      let pDescriptionAlert = document.getElementById('pDescriptionAlert');
      let wordCountDisplay = document.getElementById('wordCountDisplay');
      
      productForm.addEventListener('submit', function(event) {
        if (pNameAlert.innerText || pPriceAlert.innerText || pQuantityAlert.innerText || pDescriptionAlert.innerText) {
          event.preventDefault();
          console.log('validation Failed. form submission prevented');
        }
      });

      productName.addEventListener('change', function() {
        console.log('typing');
        let pName = productName.value;
        fetch('/admin/product/validateProduct', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              productName: pName
            }),
          })
          .then(res => res.json())
          .then(data => {
            if (data.pNameStatus) {
              pNameAlert.innerText = data.pNameStatus;
            } else {
              pNameAlert.innerText = ''; // Clear the message if there is no error
            }
            console.log(data);
          })
          .catch(error => {
            console.error('Error:', error);
          });
      });


      productPrice.addEventListener('change', function() {
        console.log('typing');
        let pQuantity = productPrice.value;
        fetch('/admin/product/validateProduct', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              productPrice: pQuantity
            }),
          })
          .then(res => res.json())
          .then(data => {
            if (data.pPriceStatus) {
              pPriceAlert.innerText = data.pPriceStatus;
            } else {
              pPriceAlert.innerText = ''; // Clear the message if there is no error
            }
            console.log(data);
          })
          .catch(error => {
            console.error('Error:', error);
          });
      });


      pDescription.addEventListener('input', function() {
        console.log('typing');
        let pDescriptionInput = pDescription.value;
        fetch('/admin/product/validateProduct', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              productDescription: pDescriptionInput
            }),
          })
          .then(res => res.json())
          .then(data => {
            if (data.pDescriptionStatus) {
              pDescriptionAlert.innerText = data.pDescriptionStatus;
            } else {
                pDescriptionAlert.innerText = ''; // Clear the message if there is no error
            }
            updateWordCount(pDescriptionInput);
            console.log(data);
          })
          .catch(error => {
            console.error('Error:', error);
          });
      });

      function updateWordCount(description) {
        const words = description.trim().split(/\s+/);
        const wordCount = words.length;
        const remainingWords = Math.max(0, 100 - wordCount);
        wordCountDisplay.innerText = `Word Count: ${wordCount}/${remainingWords}`
      }


      productQuantity.addEventListener('change', function() {
        console.log('typing');
        let pPrice = productQuantity.value;
        fetch('/admin/product/validateProduct', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              productQuantity: pPrice
            }),
          })
          .then(res => res.json())
          .then(data => {
            if (data.pQuantityStatus) {
              pQuantityAlert.innerText = data.pQuantityStatus;
            } else {
              pQuantityAlert.innerText = ''; // Clear the message if there is no error
            }
            console.log(data);
          })
          .catch(error => {
            console.error('Error:', error);
          });
      });
    });
  </script>

  <%- include('../adminLayouts/footer.ejs') -%>