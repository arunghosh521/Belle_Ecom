<%- include('../adminLayouts/header.ejs') -%>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

<style>
  .long-text {
    max-width: 200px;
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
    word-wrap: break-word;
  }

  .custome-pagination {
    margin-top: 20px;
    /* Adjust margin as needed */
  }

  .pagination {
    list-style: none;
    padding: 0;
    display: flex;
    justify-content: center;
  }

  .page-item {
    margin: 0 5px;
    /* Adjust margin as needed */
    display: inline-block;
    /* Display items in a single line */
  }

  .page-link {
    display: block;
    padding: 8px 12px;
    text-decoration: none;
    color: #333;
    border: 1px solid #ccc;
    border-radius: 4px;
    transition: background-color 0.3s;
  }

  .page-link:hover {
    background-color: #f4f4f4;
  }

  .page-item.active .page-link {
    background-color: #076380;
    color: #fff;
    border-color: #076380;
  }

  .page-item.disabled .page-link {
    opacity: 0.5;
    pointer-events: none;
  }
</style>

<div class="page-body">
  <div class="container-fluid">
    <div class="row">
      <div class="col-sm-12">
        <div class="card card-table">
          <div class="card-body">
            <div class="title-header option-title d-sm-flex d-block">
              <h5>Products List</h5>
              <div class="right-options">
                <ul>
                  <li>
                    <a href="javascript:void(0)">import</a>
                  </li>
                  <li>
                    <a href="javascript:void(0)">Export</a>
                  </li>
                  <li>
                    <a class="btn btn-solid" href="/admin/product/addProduct">Add Product</a>
                  </li>
                </ul>
              </div>
            </div>
            <div>
              <p style="color: red;"><%= messages.productMsg? messages.productMsg:"" %></p>
              <div class="table-responsive">
                <table class="table all-package theme-table table-product" id="table_id">
                  <thead>
                    <tr>
                      <th>Product Image</th>
                      <th>Product Name</th>
                      <th>Category</th>
                      <th>Current Qty</th>
                      <th>Price</th>
                      <th>Offer</th>
                      <th>List/Unlist</th>
                      <th>Option</th>
                  </thead>
                  <tbody>
                    <% products.forEach(product => { %>
                    <td>
                      <div class="table-image">
                        <img src="/uploads/<%= product.images[0] %>" class="img-fluid" alt="">
                      </div>
                    </td>

                    <td class="long-text"><%= product.name %></td>
                    <td>
                      <% if (product.category) { %>
                      <%= product.category.category %>
                      <% } else { %>
                      No Category
                      <% } %>
                    </td>
                    <td><%= product.quantity %></td>
                    <td class="bi bi-currency-rupee">â‚¹<%= product.price %></td>
                    <td>
                      <button style="margin-left: 40px;" onclick="offerListing(this)" type="button" class="btn btn-success" data-product-id="<%= product._id %>" data-is-listed=false>
                        View Offers
                      </button>
                    </td>
                    <td>
                      <% if(product.is_listed==true){ %>
                      <button style="margin-left: 40px;" onclick="listUser()" type="button" class="btn btn-success" data-product-id="<%= product._id %>" data-is-listed=false>
                        Unlist
                      </button>
                      <% }else{ %>
                      <button style="margin-left: 40px;" onclick="listUser()" type="button" class="btn btn-danger" class="btn toggle-btn" data-product-id="<%= product._id %>" data-is-listed=true>
                        List
                      </button>

                      <% } %>
                    <td>
                      <ul>
                        <li>
                          <a href="/admin/product/editProduct/<%= product._id %>">
                            <i class="ri-pencil-line"></i>
                          </a>
                        </li>
                      </ul>
                    </td>
                    </tr>
                    <% }); %>
                  </tbody>
                </table>
              </div><br>
              <div style="display: flex;">
                <nav class="custome-pagination" id="paginationList">
                  <ul class="pagination justify-content-center">

                  </ul>
                </nav>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <!-- Container-fluid Ends-->

  <!-- Modal -->
  <div id="offerDetailsModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-xl" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Offer Details</h5>

        </div>
        <div class="modal-body">
          <!-- Offer details will be loaded here -->
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>




  <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>


  <script>
    async function listUser() {
      const button = event.target;

      const productId = button.dataset.productId;
      const isListed = button.dataset.isListed;

      $.ajax({
        type: 'POST',
        data: {
          productId: productId,
          isListed: isListed
        },
        url: '/admin/product/editproduct/toggleList',
        success: async (res) => {
          if (res.success) {
            displayMessage(isListed);
          } else {
            console.error('Toggle block failed');
          }
        },
        error: (err) => {
          console.error('Error in AJAX request:', err);
        }
      });

      function displayMessage(isListed) {
        var alertMessage = isListed === 'true' ?
          "ðŸŽ‰ Product listed successfully!" :
          "ðŸš« Product Unlisted successfully!";
        Swal.fire({
          icon: 'success',
          title: 'Alert meaasge',
          text: alertMessage,
          willClose: () => {
            window.location.reload();
          }
        });
      }
    }
  </script>

  <script>
    function offerListing(button) {
      const productId = button.dataset.productId;
      document.querySelector('#offerDetailsModal').dataset.productId = productId;
      $.ajax({
        url: '/admin/offerListing',
        type: 'POST',
        success: function(response) {
          let offersHtml = `
          <table class="table">
            <thead>
              <tr>
                <th>Offer Name</th>
                <th>Discount</th>
                <th>Description</th>
                <th>Apply</th>
                <th>Remove</th>
              </tr>
            </thead>
            <tbody>
        `;
          response.offerDetails.forEach(offer => {
            if (offer) {
              offersHtml += `
              <tr>
                <td>${offer.offerName}</td>
                <td>${offer.percentage}% off</td>
                <td>${offer.offerDescription}</td>
                <td>
                  <button class="btn btn-primary apply-offer-btn">Apply</button>
                </td>
                <td>
                  <button class="btn btn-primary remove-offer-btn">Remove</button>
                </td>
              </tr>
            `;
            }
          });
          offersHtml += `
            </tbody>
          </table>
        `;

          document.querySelector('#offerDetailsModal .modal-body').innerHTML = offersHtml;
          $('#offerDetailsModal').modal('show');

          document.querySelector('#offerDetailsModal .modal-body table').addEventListener('click', function(event) {
            if (event.target.classList.contains('apply-offer-btn')) {
              const row = event.target.closest('tr');
              const offerName = row.querySelector('td:nth-child(1)').textContent;
              const productId = document.querySelector('#offerDetailsModal').dataset.productId;
              $.ajax({
                url: '/admin/applyOfferToProduct',
                type: 'POST',
                data: {
                  offerName: offerName,
                  productId: productId
                },
                success: function(response) {
                  alert(response.message);
                },
                error: function(jqXHR, textStatus, errorThrown) {
                  console.error('Error applying offer:', textStatus, errorThrown);
                }
              });
            }
          });

          document.querySelector('#offerDetailsModal .modal-body table').addEventListener('click', function(event) {
            if (event.target.classList.contains('remove-offer-btn')) {
              const row = event.target.closest('tr');
              const offerName = row.querySelector('td:nth-child(1)').textContent;
              const productId = document.querySelector('#offerDetailsModal').dataset.productId;
              $.ajax({
                url: '/admin/removeOfferProduct',
                type: 'POST',
                data: {
                  offerName: offerName,
                  productId: productId
                },
                success: function(response) {
                  alert(response.message);
                },
                error: function(jqXHR, textStatus, errorThrown) {
                  console.error('Error applying offer:', textStatus, errorThrown);
                }
              });
            }
          });
        }
      });
    }

    // Event listener for the modal close button
    document.querySelector('.btn-secondary').addEventListener('click', function() {
      $('#offerDetailsModal').modal('hide');
    });
  </script>

  <script>
    let currentPageNo = 1;
    let itemsPerPage = 4;

    function fetchProducts(page) {
      fetch(`/admin/product/pagination?page=${page}&limit=${itemsPerPage}`)
        .then(response => response.json())
        .then(data => {
          updateTable(data.products);
          updatePagination(data.totalPages, data.currentPage);
        })
        .catch(error => console.error('Error fetching products:', error));
    }

    function updateTable(products) {
    const tableBody = document.querySelector('#table_id tbody');
    tableBody.innerHTML = '';

    products.forEach(product => {
        const newRow = document.createElement('tr');

        // Create and append the image cell
        const imageCell = document.createElement('td');
        const imageDiv = document.createElement('div');
        imageDiv.className = 'table-image';
        const image = document.createElement('img');
        image.src = `/uploads/${product.images[0]}`;
        image.className = 'img-fluid';
        image.alt = '';
        imageDiv.appendChild(image);
        imageCell.appendChild(imageDiv);
        newRow.appendChild(imageCell);

        // Create and append the name cell
        const nameCell = document.createElement('td');
        nameCell.className = 'long-text';
        nameCell.textContent = product.name;
        newRow.appendChild(nameCell);

        // Create and append the category cell
        const categoryCell = document.createElement('td');
        categoryCell.textContent = product.category ? product.category.category : 'No Category';
        newRow.appendChild(categoryCell);

        // Create and append the quantity cell
        const quantityCell = document.createElement('td');
        quantityCell.textContent = product.quantity;
        newRow.appendChild(quantityCell);

        // Create and append the price cell
        const priceCell = document.createElement('td');
        priceCell.className = 'bi bi-currency-rupee';
        priceCell.textContent = `â‚¹${product.price}`;
        newRow.appendChild(priceCell);

        // Create and append the "View Offers" button
        const viewOffersCell = document.createElement('td');
        const viewOffersButton = document.createElement('button');
        viewOffersButton.style.marginLeft = '40px';
        viewOffersButton.onclick = function() { offerListing(this); };
        viewOffersButton.type = 'button';
        viewOffersButton.className = 'btn btn-success';
        viewOffersButton.dataset.productId = product._id;
        viewOffersButton.dataset.isListed = false;
        viewOffersButton.textContent = 'View Offers';
        viewOffersCell.appendChild(viewOffersButton);
        newRow.appendChild(viewOffersCell);

        // Create and append the "List"/"Unlist" button
        const listCell = document.createElement('td');
        const listButton = document.createElement('button');
        listButton.style.marginLeft = '40px';
        listButton.onclick = function() { listUser(this); };
        listButton.type = 'button';
        listButton.dataset.productId = product._id;
        listButton.dataset.isListed = !product.is_listed; // Assuming you want to toggle the listed status
        listButton.className = product.is_listed ? 'btn btn-success' : 'btn btn-danger toggle-btn';
        listButton.textContent = product.is_listed ? 'Unlist' : 'List';
        listCell.appendChild(listButton);
        newRow.appendChild(listCell);

        // Create and append the edit link cell
        const editCell = document.createElement('td');
        const editLink = document.createElement('a');
        editLink.href = `/admin/product/editProduct/${product._id}`;
        const editIcon = document.createElement('i');
        editIcon.className = 'ri-pencil-line';
        editLink.appendChild(editIcon);
        editCell.appendChild(editLink);
        newRow.appendChild(editCell);

        // Append the new row to the table body
        tableBody.appendChild(newRow);
    });
}

    function updatePagination(totalPages, currentPage) {
      const paginationList = document.getElementById('paginationList');
      paginationList.innerHTML = '';

      // Add "Previous" button
      const prevLi = document.createElement('li');
      prevLi.className = 'page-item';
      if (currentPage === 1) {
        prevLi.classList.add('disabled');
      }
      const prevA = document.createElement('a');
      prevA.className = 'page-link';
      prevA.href = 'javascript:void(0)';
      prevA.innerHTML = '<i class="fa-solid fa-angles-left"></i>';
      prevA.addEventListener('click', () => {
        if (currentPage > 1) {
          currentPageNo--;
          fetchProducts(currentPageNo);
        }
      });
      prevLi.appendChild(prevA);
      paginationList.appendChild(prevLi);

      // Add page numbers
      for (let i = 1; i <= totalPages; i++) {
        const li = document.createElement('li');
        li.className = 'page-item';
        if (i === currentPage) {
          li.classList.add('active');
        }
        const a = document.createElement('a');
        a.className = 'page-link';
        a.href = 'javascript:void(0)';
        a.textContent = i;
        a.addEventListener('click', () => {
          currentPageNo = i;
          fetchProducts(currentPageNo);
        });
        li.appendChild(a);
        paginationList.appendChild(li);
      }

      // Add "Next" button
      const nextLi = document.createElement('li');
      nextLi.className = 'page-item';
      if (currentPage === totalPages) {
        nextLi.classList.add('disabled');
      }
      const nextA = document.createElement('a');
      nextA.className = 'page-link';
      nextA.href = 'javascript:void(0)';
      nextA.innerHTML = '<i class="fa-solid fa-angles-right"></i>';
      nextA.addEventListener('click', () => {
        if (currentPage < totalPages) {
          currentPageNo++;
          fetchProducts(currentPageNo);
        }
      });
      nextLi.appendChild(nextA);
      paginationList.appendChild(nextLi);
    }

    fetchProducts(currentPageNo);
  </script>



  <%- include('../adminLayouts/footer.ejs') -%>