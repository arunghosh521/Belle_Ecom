<%- include('../layouts/header.ejs') -%>

<link rel="stylesheet" href="/style.css">

<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">


<style>
  .wallet-balance {
    color: #007bff;
    /* Blue color */
    font-weight: bold;
    font-size: 1.2em;
    /* Make the balance slightly larger */
  }


  .img-avatar {
    width: 130px;
    /* Set the width of the image */
    height: 150px;
    /* Set the height of the image */
    object-fit: cover;
    /* Ensure the image covers the entire container */
    object-position: center;
    /* Center the image within the container */
  }

  .btn-upload {
    font-size: 14px;
    /* Set the font size of the button */
    padding: 8px 16px;
    /* Set the padding of the button */
    margin-top: 10px;
    /* Add some top margin to separate the button from the image */
  }


  .order-table {
    width: 100%;
    border-collapse: collapse;
    margin: 20px 0;
    font-size: 13px;
  }

  .order-table th,
  .order-table td {
    border: 0px solid #ddd;
    padding: 2px;
    text-align: center;
  }

  .order-table th {
    background-color: #000;
    color: white;
  }

  .order-table tr:nth-child(even) {
    background-color: #f2f2f2;
  }

  .order-table a {
    color: #000;
    text-decoration: none;
  }

  .order-table a:hover {
    color: #0056b3;
  }


  .btn-primary {
    background-color: black;

    color: white;
    padding: 5px 10px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 16px;
    margin: 4px 2px;
    cursor: pointer;
  }

  .btn-link {
    background-color: black;
    border: 10px;
    color: white;
    text-decoration: none;
    cursor: pointer;
  }

  .btn-underline:hover {
    text-decoration: underline;
    color: black;
  }

  .order-status {
    width: 12rem;
    font-size: 1.2rem;
    color: #222
  }

  .order-status span {
    display: inline-block;
    padding: .1rem .5rem;
    background-color: #ccc;
    border-radius: .3rem;
    line-height: 1.9
  }

  .order-action {
    width: 9rem;
    font-size: 1.2rem;
    color: #222
  }

  .order-action a {
    display: inline-block;
    padding: .1rem .5rem;
    background-color: #ccc;
    border-radius: .3rem;
    line-height: 1.9
  }

  .custom-modal-body .modal-content {
    background-color: #f8f9fa;
    border-radius: 10px;
  }

  .custom-modal-body .modal-header {
    background-color: tan;
    color: #ffffff;
    border-radius: 10px 10px 0 0;
  }

  /* Style for the modal title */
  .custom-modal-body .modal-title {
    font-size: 20px;
  }

  /* Style for the close button */
  .custom-modal-body .close {
    color: #ffffff;
    opacity: 1;
  }

  /* Style for the modal body */
  .custom-modal-body .modal-body {
    padding: 20px;
  }

  .progtrckr {
    display: flex;
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .progtrckr li {
    flex: 1;
    text-align: center;
    margin: 0 10px;
    padding: 10px;
    border-radius: 5px;
    color: #333;
    font-weight: bold;
  }

  .progtrckr-done {
    background-color: #d1ce2f;
  }

  .progtrckr-todo {
    background-color: #F5ECCE;
  }

  .progtrckr h5 {
    margin-bottom: 5px;
  }

  .progtrckr h6 {
    margin: 0;
  }

  /* Style for the table within the modal */
  .custom-modal-body .table {
    margin-top: 20px;

  }

  .custom-modal-body .table th,
  .custom-modal-body .table td {
    padding: 10px;

  }

  .custom-modal-body .table thead {
    background-color: #f8f9fa;

  }

  .custom-modal-body .table tbody tr:nth-child(even) {
    background-color: #e9ecef;

  }

  .custom-modal-body .table tbody tr:hover {
    background-color: #f8f9fa;

  }


  .custom-modal-body .modal-footer {
    background-color: #f8f9fa;

    border-radius: 0 0 10px 10px;

  }

  .highlight-price {
    background-color: yellow;

    color: black;

    font-weight: bold;

    padding: 2px 5px;

  }

  .highlight-quantity {
    background-color: lightblue;

    color: black;

    font-weight: bold;

    padding: 2px 5px;

  }

  .input-button-container {
    display: flex;
    align-items: center;
    gap: 20px;
  }

  .input-button-container button {
    width: 150px;
    height: 40px;
    padding: 5px 10px;
  }

  .modal-body p {
    font-size: 11px;

  }

  .custom-swal-input {
    width: 50%;
    max-width: 100px;
    margin: 0 auto;
  }
</style>


<div class="page-content">
  <div class="dashboard">
    <div class="container">
      <div class="row">
        <aside class="col-md-4 col-lg-3">
          <ul class="nav nav-dashboard flex-column mb-3 mb-md-0" role="tablist">
            <li class="nav-item">
              <a class="nav-link" id="tab-orders-link" data-toggle="tab" href="#tab-orders" role="tab" aria-controls="tab-orders" aria-selected="false">Orders</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" id="tab-downloads-link" data-toggle="tab" href="#tab-downloads" role="tab" aria-controls="tab-downloads" aria-selected="false">Wallet</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" id="tab-address-link" data-toggle="tab" href="#tab-address" role="tab" aria-controls="tab-address" aria-selected="false">Adresses</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" id="tab-account-link" data-toggle="tab" href="#tab-account" role="tab" aria-controls="tab-account" aria-selected="false">Account Details</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/logout">Log Out</a>
            </li>
          </ul>
        </aside><!-- End .col-lg-3 -->

        <div class="col-md-8 col-lg-9">
          <div class="tab-content">
            <div class="tab-pane fade show active" id="tab-orders" role="tabpanel" aria-labelledby="tab-orders-link">
              <!-- Wrap the table with .table-responsive to make it responsive -->
              <div>
                <h2 class="content-title card-title">My Orders</h2>
              </div><br>
              <div>
                <input type="text" placeholder="Search order ID" class="form-control bg-white" id="searchOrderId" />
              </div>
              <div class="table-responsive">
                <table class="order-table" id="table_id">
                  <thead>
                    <tr>
                      <th class="pl-2">Order ID</th>
                      <th>Date</th>
                      <th>Status</th>
                      <th>Payment Status</th>
                      <th>Total</th>
                      <th class="pr-2">Actions</th>
                    </tr>
                  </thead>
                  <tbody id="table_body">
                    <% if (orderData && orderData.length >0) { %>
                    <% orderData.forEach(order => { %>
                    <tr>
                      <td class="order-number"><a href="#">#<%= order.orderID %></a></td>
                      <td class="order-date"><time><%= order.orderedDate %></time></td>
                      <td class="order-status"><span><%= order.orderStatus %></span></td>
                      <td class="order-status"><span><%= order.paymentStatus %></span></td>
                      <td class="order-total">
                        <span class="highlight-price" style="font-size: 15px;">â‚¹<%= order.orderTotal %></span> for
                        <span class="highlight-quantity"><%= order.products.length  %></span> items
                      </td>

                      <td class="order-action">
                        <button type="button" class="btn btn-primary btn-link btn-underline view-order-btn" data-toggle="modal" data-target="#orderTrackingModal" data-order-id="<%= order.orderId %>">View</button>
                      </td>
                    </tr>
                    <% }); %>
                    <% } else { %>
                    <tr>
                      <td class="order-number"><a href="#">No orders</a></td>

                    </tr>
                    <% } %>
                  </tbody>
                </table>
                <div class="pagination">
                  <button id="prevPage" disabled>Previous</button> &nbsp;
                  <span id="pageInfo"></span>&nbsp;
                  <button id="nextPage">Next</button>
                </div>
              </div>

              <!-- <a href="category.html" class="btn btn-outline-primary-2"><span>GO SHOP</span><i class="icon-long-arrow-right"></i></a> -->
            </div><!-- .End .tab-pane -->
            <!-- Order Tracking Seation starts-->
            <!-- Modal -->
            <div class="modal fade custom-modal-body" id="orderTrackingModal" tabindex="-1" role="dialog" aria-labelledby="orderTrackingModalLabel" aria-hidden="true">
              <div class="modal-dialog modal-xl" style="max-width: 1000px;" role="document">
                <div class="modal-content">
                  <div class="modal-header">
                    <h5 class="modal-title" id="orderTrackingModalLabel">Order Tracking</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                      <span aria-hidden="true">&times;</span>
                    </button>
                  </div>
                  <div class="modal-body" style="max-height: 600px; overflow-y: auto;">
                    <div class="row">
                      <div class="col-12">
                        <div class="row">
                          <div class="col-sm-12">
                            <div class="card">
                              <div class="card-body">
                                <div class="title-header option-title">
                                  <h5>Order Tracking</h5>
                                </div>
                                <div class="row">
                                  <div class="col-12 overflow-hidden">
                                    <div class="order-left-image">


                                      <div class="order-image-contain">
                                        <h4 class="product-name"></h4>
                                        <div class="tracker-number">
                                          <p>Order Number : <span class="order-id"></span></p>
                                          <p>Payment Method : <span class="product-payment"></span></p>
                                          <p>Order Placed : <span class="order-date"></span></p>
                                          <p>Expected Delivery : <span class="order-delivery"></span></p>
                                        </div><br>
                                        <h5>Your items is on the way. Tracking information will be
                                          available within 24 hours.</h5><br>
                                      </div>
                                    </div>
                                  </div>

                                  <ol class="progtrckr">

                                    <li class="progtrckr-done">
                                      <p style="color: #0056b3;">Order Status</p>
                                      <h5 class="order-processing"></h5>

                                  </ol>

                                  <div class="col-12 overflow-visible">
                                    <div class="tracker-table">
                                      <div class="table-responsive">
                                        <table class="table">
                                          <thead>
                                            <tr class="table-head">
                                              <th scope="col">Product Name</th>
                                              <th scope="col">Quantity</th>
                                              <th scope="col">Price</th>
                                              <th scope="col">Sub Total</th>
                                            </tr>
                                          </thead>

                                          <tbody>
                                            <tr>
                                              <td>
                                                <h6 class="product-name"></h6>
                                              </td>
                                              <td>
                                                <h6 class="product-quantity"></h6>
                                              </td>
                                              <td>
                                                <p class="product-price"></p>
                                              </td>
                                              <td>
                                                <h6 class="sub-total"></h6>
                                              </td>
                                            </tr>

                                          </tbody>
                                        </table>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </div>
                              <div class="card-footer text-end border-0 pb-0 d-flex justify-content-end">
                                <button class="btn btn-primary me-3" id="returnBtn">Return</button>
                                <button class="btn btn-primary me-3" id="cancelBtn">Cancel Order</button>
                                <button class="btn btn-primary me-3" id="retryBtn">Retry Payment</button>
                                <button class="btn btn-primary me-3" id="invoiceBtn">Invoice</button>

                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>

                  </div>

                </div>
              </div>
            </div>

            <!-- Order Tracking Seation End-->


            <div class="tab-pane fade" id="tab-downloads" role="tabpanel" aria-labelledby="tab-downloads-link">
              <div>
                <h2 class="content-title card-title">My Wallet &nbsp; - â‚¹&nbsp;<span class="wallet-balance"><%= walletData.balance %></span></h2>

              </div><br>
              <div class="input-button-container">
                <input type="Number" id="enteredMoney" min="1" placeholder="Enter amount">
                <button class="btn btn btn-primary me-2" id="addMoney" onclick="openRazorpayCheckout()">Add Money</button>
              </div><br>
              <div style="display: inline-flex;">
                <h4>Reffer a friend and get â‚¹199 in your wallet</h4> <a href="#" id="refferalLink" style="margin-left: 20px;">Click here</a>
              </div>
              <div class="table-responsive">
                <table class="order-table" id="wallet_table_id">
                  <thead>
                    <tr>
                      <th class="pl-2">Transaction ID</th>
                      <th>Date</th>
                      <th>Type</th>
                      <th>Amount</th>
                      <th>Description</th>
                    </tr>
                  </thead>
                  <tbody id="wallet_table_body">
                    <% if (walletData && walletData.walletHistory && walletData.walletHistory.length > 0) { %>
                    <% walletData.walletHistory.forEach(transaction => { %>
                    <% if (transaction.description !== "Initial balance") { %>
                    <tr>
                      <td class="transaction-id"><a href="#">#<%= transaction.transactionId %></a></td>
                      <td class="transaction-date"><time><%= new Date(transaction.date).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) %></time></td>
                      <td class="transaction-type"><span><%= transaction.transactionType %></span></td>
                      <td class="transaction-amount">
                        <span class="highlight-price" style="font-size: 15px;">â‚¹<%= transaction.amount %></span>
                      </td>
                      <td class="transaction-status"><span><%= transaction.description %></span></td>
                    </tr>
                    <% } %>
                    <% }); %>
                    <% } else { %>
                    <tr>
                      <td class="transaction-id" colspan="5">No transactions</td>
                    </tr>
                    <% } %>
                  </tbody>
                </table>
                <div class="paginationOfWallet">
                  <button id="prevPageOfWallet" disabled>Previous</button> &nbsp;
                  <span id="pageInfoOfWallet"></span>&nbsp;
                  <button id="nextPageOfWallet">Next</button>
                </div>
              </div>
            </div>


            <div class="tab-pane fade" id="tab-address" role="tabpanel" aria-labelledby="tab-address-link">
              <button id="openBtn" class="btn btn-primary me-2">
                <span>ADD ADDRESS</span>
              </button>
              <br><br>
              <% if(addressData && addressData.length > 0) { %>
              <% for (let i = 0; i < addressData.length; i += 2) { %>
              <div class="row">
                <% for (let j = i; j < i + 2 && j < addressData.length; j++) { %>
                <div class="col-lg-6">
                  <div class="card card-dashboard">
                    <div class="card-body">
                      <h3 class="card-title">Address</h3><!-- End .card-title -->
                      <p>
                        <%= addressData[j].Fname %><br>
                        <%= addressData[j].address %><br>
                        <%= addressData[j].apartment %>, <%= addressData[j].city %><br>
                        <%= addressData[j].pincode %><br>
                        <%= addressData[j].mobile %><br>
                        <button id="editBtn" data-id="<%= addressData[j]._id %>" class="editBtn btn btn-primary me-2">
                          <span>EDIT</span>
                        </button>
                        <a href="/address/delete?id=<%= addressData[j]._id %>">
                          <button id="deleteBtn" data-address-id="<%= addressData[j]._id %>" class="editBtn btn btn-primary me-2">
                            <span>Delete</span>
                          </button></a>
                      </p>
                    </div><!-- End .card-body -->
                  </div><!-- End .card-dashboard -->
                </div><!-- End .col-lg-6 -->
                <% } %>
              </div><!-- End .row -->
              <% } %>
              <% } else { %>
              <p>No address</p>
              <% } %>


              <!-- Edit Address modal -->

              <div class="modal fade" id="editAddressModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                  <div class="modal-content">
                    <div class="modal-header">
                      <h5 class="modal-title" id="exampleModalLabel">Edit Address</h5>
                      <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                      </button>
                    </div>
                    <div class="modal-body">
                      <form id="editAddressForm" action="/address/editAddress" method="post" accept-charset="UTF-8">
                        <fieldset>
                          <div class="row">
                            <div class="form-group col-md-6 col-lg-6 col-xl-6 required">
                              <label for="input-firstname">Full Name <span class="required-f">*</span></label>
                              <input name="firstname" value="" id="input-firstname" type="text">
                              <p id="editFnameAlert" style="color: red;"></p>
                            </div>
                            <div class="form-group col-md-6 col-lg-6 col-xl-6 required">
                              <label for="input-telephone">Mobile <span class="required-f">*</span></label>
                              <input name="telephone" value="" id="input-telephone" type="tel">
                              <p id="editMobileAlert" style="color: red;"></p>
                            </div>

                          </div>

                        </fieldset>
                        <fieldset>
                          <div class="row">
                            <div class="form-group col-md-6 col-lg-6 col-xl-6 required">
                              <label for="input-address-1">Address <span class="required-f">*</span></label>
                              <input name="address_1" value="" id="input-address-1" type="text">
                              <p id="editAddressAlert" style="color: red;"></p>
                            </div>
                            <div class="form-group col-md-6 col-lg-6 col-xl-6">
                              <label for="input-address-2">Apartment <span class="required-f">*</span></label>
                              <input name="address_2" value="" id="input-address-2" type="text">
                              <p id="editApartmentAlert" style="color: red;"></p>

                            </div>
                          </div>
                          <div class="row">

                            <div class="form-group col-md-6 col-lg-6 col-xl-6 required">
                              <label for="input-city">City <span class="required-f">*</span></label>
                              <input name="city" value="" id="input-city" type="text">
                              <p id="editCityAlert" style="color: red;"></p>
                            </div>
                            <div class="form-group col-md-6 col-lg-6 col-xl-6 required">
                              <label for="input-postcode">Post Code <span class="required-f">*</span></label>
                              <input name="postcode" value="" id="input-postcode" type="text">
                              <p id="editCodeAlert" style="color: red;"></p>
                              <input type="hidden" value="" id="input-ID" name="addressId">
                              <input type="hidden" value="<%= user._id %>" name="userID">
                            </div>
                          </div>
                          <div class="row">
                            <div class="form-group col-md-6 col-lg-6 col-xl-6 required">
                              <label for="input-country">Country <span class="required-f">*</span></label>
                              <select name="country_id" id="input-country">
                                <option value=""> --- Please Select --- </option>
                                <option>India</option>
                                <p id="editCountryAlert" style="color: red;"></p>
                              </select>
                            </div>
                            <div class="form-group col-md-6 col-lg-6 col-xl-6 required">
                              <label for="input-zone">Region / State <span class="required-f">*</span></label>
                              <select name="zone_id" id="input-zone">
                                <option value=""> --- Please Select --- </option>
                                <option>Kerala</option>
                                <p id="editStateAlert" style="color: red;"></p>
                              </select>
                            </div>
                          </div>
                          <div class="order-button-payment">
                            <button class="btn btn-primary me-2" value="Submit" type="submit">Submit</button>
                            <p id="editValidationAlert" style="color: red;"></p>
                          </div>
                        </fieldset>
                      </form>
                    </div>
                  </div>
                </div>
              </div>
              <!-- Edit Address modal End -->



              <!-- Add Address modal -->
              <div class="modal fade" id="addressModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                  <div class="modal-content">
                    <div class="modal-header">
                      <h5 class="modal-title" id="exampleModalLabel">Add Address</h5>
                      <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                      </button>
                    </div>
                    <div class="modal-body">
                      <form id="addressForm" action="/address" method="post" accept-charset="UTF-8">
                        <fieldset>
                          <div class="row">
                            <div class="form-group col-md-6 col-lg-6 col-xl-6 required">
                              <label for="input-firstname">Full Name <span class="required-f">*</span></label>
                              <input name="firstname" value="" id="input-firstname" type="text">
                              <p id="FnameAlert" style="color: red;"></p>

                            </div>
                            <div class="form-group col-md-6 col-lg-6 col-xl-6 required">
                              <label for="input-telephone">Mobile <span class="required-f">*</span></label>
                              <input name="telephone" value="" id="input-telephone" type="number">
                              <p id="MobileAlert" style="color: red;"></p>

                            </div>

                          </div>

                        </fieldset>
                        <fieldset>
                          <div class="row">
                            <div class="form-group col-md-6 col-lg-6 col-xl-6 required">
                              <label for="input-address-1">Address <span class="required-f">*</span></label>
                              <input name="address_1" value="" id="inputAddress1" type="text">
                              <p id="AddressAlert" style="color: red;"></p>
                            </div>
                            <div class="form-group col-md-6 col-lg-6 col-xl-6">
                              <label for="input-address-2">Apartment <span class="required-f">*</span></label>
                              <input name="address_2" value="" id="inputAddress2" type="text">
                              <p id="ApartmentAlert" style="color: red;"></p>

                            </div>
                          </div>
                          <div class="row">

                            <div class="form-group col-md-6 col-lg-6 col-xl-6 required">
                              <label for="input-city">City <span class="required-f">*</span></label>
                              <input name="city" value="" id="input-city" type="text">
                              <p id="CityAlert" style="color: red;"></p>
                            </div>
                            <div class="form-group col-md-6 col-lg-6 col-xl-6 required">
                              <label for="input-postcode">Post Code <span class="required-f">*</span></label>
                              <input name="postcode" value="" id="input-postcode" type="number">
                              <p id="CodeAlert" style="color: red;"></p>
                              <input type="hidden" value="<%= user._id %>" name="userID">
                            </div>
                          </div>
                          <div class="row">
                            <div class="form-group col-md-6 col-lg-6 col-xl-6 required">
                              <label for="input-country">Country <span class="required-f">*</span></label>
                              <select name="country_id" id="input-country">
                                <option value=""> --- Please Select --- </option>
                                <option>India</option>
                                <p id="CountryAlert" style="color: red;"></p>
                              </select>
                            </div>
                            <div class="form-group col-md-6 col-lg-6 col-xl-6 required">
                              <label for="input-zone">Region / State <span class="required-f">*</span></label>
                              <select name="zone_id" id="input-zone">
                                <option value=""> --- Please Select --- </option>
                                <option>Kerala</option>
                                <p id="StateAlert" style="color: red;"></p>
                              </select>
                            </div>
                          </div>
                          <div class="order-button-payment">
                            <button class="btn btn-primary me-2" value="Submit" type="submit">Submit</button>
                            <p id="validationAlert" style="color: red;"></p>

                          </div>
                        </fieldset>
                      </form>
                    </div>
                  </div>
                </div>
              </div>

            </div>




            <div class="tab-pane fade" id="tab-account" role="tabpanel" aria-labelledby="tab-account-link">
              <form action="/editProfile" id="profileForm" method="post" enctype="multipart/form-data">
                <aside class="col-lg-4">
                  <figure class="text-lg-center">
                    <% if (user.image) { %>
                    <img class="img-lg mb-3 img-avatar" id="userPhoto" src="/uploads/<%= user.image %>" alt="User Photo" />
                    <% }else { %>
                    <img class="img-lg mb-3 img-avatar" id="userPhoto" src="/avatar-2.png" alt="User Photo" />
                    <% } %>
                    <figcaption>
                      <label for="photoUpload" class="btn btn btn-primary me-2">
                        <i class="icons material-icons md-backup font-md"></i> Upload
                      </label>
                      <input type="file" name="image" id="photoUpload" style="display: none;">
                    </figcaption>
                  </figure>
                </aside>
                <div class="row">

                  <div class="col-sm-6">

                    <label>First Name *</label>
                    <input type="text" class="form-control" value="<%= user.firstname %>" name="Fname" required>
                    <input type="hidden" id="userID" value="<%= user._id %>" name="UserID">
                  </div><!-- End .col-sm-6 -->

                  <div class="col-sm-6">
                    <label>Last Name *</label>
                    <input type="text" class="form-control" value="<%= user.lastname %>" name="Lname" required>
                  </div><!-- End .col-sm-6 -->
                </div><!-- End .row -->

                <label>Display Name *</label>
                <input type="text" class="form-control" value="<%= (user.firstname + ' ' + user.lastname).toUpperCase() %>" disabled>
                <small class="form-text">This will be how your name will be displayed in the account section and in reviews</small>

                <label>Email address *</label>
                <input type="email" class="form-control" value="<%= user.email %>" name="Email" required>


                <label>Current password (leave blank to leave unchanged)</label>
                <input type="password" name="CurrentPass" class="form-control">


                <label>New password (leave blank to leave unchanged)</label>
                <input type="password" name="newPass" class="form-control">


                <label>Confirm new password</label>
                <input type="password" name="confirmPass" class="form-control mb-2">

                <button type="submit" class="btn btn btn-primary me-2">
                  <span>SAVE CHANGES</span>
                </button>
              </form>
            </div><!-- .End .tab-pane -->
          </div>
        </div><!-- End .col-lg-9 -->
      </div><!-- End .row -->
    </div><!-- End .container -->
  </div><!-- End .dashboard -->
</div><!-- End .page-content -->

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css">

<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<!-- modal opening and closing -->
<script>
  $('#openBtn').click(function() {
    $("#addressModal").modal();
  });

  $('#closeModal').click(function() {
    $("#myModal").modal('hide');
  });
</script>

<!-- add address -->
<script>
  $(document).ready(function() {
    $('#addressForm').submit(function(event) {
      event.preventDefault();

      var formData = $(this).serialize();
      $.ajax({
        url: '/address',
        method: 'POST',
        data: formData,
        success: function(response) {
          if (response.success === true) {
            Swal.fire({
              title: 'Success!',
              text: 'Your address has been added successfully.',
              icon: 'success',
              confirmButtonText: 'OK'
            }).then((result) => {
              if (result.isConfirmed) {
                window.location.reload();
              }
            });
          } else {
            if (response.successFailed === false) {
              $('#validationAlert').text(response.message);
            } else {
              $('#validationAlert').text('');
            }
            if (response.successFirstname === false) {
              $('#FnameAlert').text(response.message);
            } else {
              $('#FnameAlert').text('');
            }
            if (response.successMobile === false) {
              $('#MobileAlert').text(response.message);
            } else {
              $('#MobileAlert').text('');
            }
            if (response.successAddress1 === false) {
              $('#AddressAlert').text(response.message);
            } else {
              $('#AddressAlert').text('');
            }
            if (response.successAddress2 === false) {
              $('#ApartmentAlert').text(response.message);
            } else {
              $('#ApartmentAlert').text('');
            }
            if (response.successCity === false) {
              $('#CityAlert').text(response.message);
            } else {
              $('#CityAlert').text('');
            }
            if (response.successPostcode === false) {
              $('#CodeAlert').text(response.message);
            } else {
              $('#CodeAlert').text('');
            }
            if (response.successCountry === false) {
              $('#CountryAlert').text(response.message);
            } else {
              $('#CountryAlert').text('');
            }
            if (response.successState === false) {
              $('#StateAlert').text(response.message);
            } else {
              $('#StateAlert').text('');
            }

          }
        },
        error: function(xhr, status, error) {
          console.log(xhr.responseText);
          Swal.fire("Error!", "Failed to add address.", "error");
        }
      });
    });
  });
</script>


<!-- delete address -->
<script>
  $(document).ready(function() {

    $(document).on('click', '#deleteBtn', function(event) {
      event.preventDefault();
      const addressId = $(this).data('address-id');

      Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!'
      }).then((result) => {
        if (result.isConfirmed) {
          $.ajax({
            url: '/address/delete?id=' + addressId,
            method: 'DELETE',
            success: function(response) {
              Swal.fire("Success!", "Address deleted successfully", "success")
                .then((value) => {
                  if (value) {
                    window.location.href = '/userProfile';
                  }
                })
            },
            error: function(xhr, status, error) {
              Swal.fire("Error!", "Failed to delete address.", "error");
            }
          });
        }
      });
    });
  });
</script>

<!-- edit address -->
<script>
  $(document).ready(function() {

    $(document).on('click', '.editBtn', function() {

      const addressId = $(this).data('id');

      $.ajax({
        url: '/address/details',
        method: 'POST',
        data: {
          id: addressId
        },
        success: function(response) {

          $('#input-firstname').val(response.address.Fname);
          $('#input-telephone').val(response.address.mobile);
          $('#input-address-1').val(response.address.address);
          $('#input-address-2').val(response.address.apartment);
          $('#input-city').val(response.address.city);
          $('#input-postcode').val(response.address.pincode);
          $('#input-country').val(response.address.country);
          $('#input-zone').val(response.address.state);
          $('#input-ID').val(response.address._id);

          $('#editAddressModal').modal('show');
        },
        error: function(xhr, status, error) {
          // Handle error
          Swal.fire("Error!", "Failed to fetch address details", "error");
        }
      });
    });
  });

  $('#editAddressForm').submit(function(event) {
    event.preventDefault();
    const addressId = $('#editBtn').data('id');
    var formData = $(this).serialize();

    $.ajax({
      url: '/address/editAddress',
      method: 'PUT',
      data: formData,
      success: function(response) {
        if (response.success === true) {
          Swal.fire({
            title: 'Success!',
            text: 'Your address has been updated successfully.',
            icon: 'success',
            confirmButtonText: 'OK'
          }).then((result) => {
            if (result.isConfirmed) {
              window.location.reload();
            }
          });
        } else {

          if (response.successFailed === false) {
            $('#editValidationAlert').text(response.message);
          } else {
            $('#editValidationAlert').text('');
          }
          if (response.successFirstname === false) {
            $('#editFnameAlert').text(response.message);
          } else {
            $('#editFnameAlert').text('');
          }
          if (response.successMobile === false) {
            $('#editMobileAlert').text(response.message);
          } else {
            $('#editMobileAlert').text('');
          }
          if (response.successAddress1 === false) {
            $('#editAddressAlert').text(response.message);
          } else {
            $('#editAddressAlert').text('');
          }
          if (response.successAddress2 === false) {
            $('#editApartmentAlert').text(response.message);
          } else {
            $('#editApartmentAlert').text('');
          }
          if (response.successCity === false) {
            $('#editCityAlert').text(response.message);
          } else {
            $('#editCityAlert').text('');
          }
          if (response.successPostcode === false) {
            $('#editCodeAlert').text(response.message);
          } else {
            $('#editCodeAlert').text('');
          }
          if (response.successCountry === false) {
            $('#editCountryAlert').text(response.message);
          } else {
            $('#editCountryAlert').text('');
          }
          if (response.successState === false) {
            $('#editStateAlert').text(response.message);
          } else {
            $('#editStateAlert').text('');
          }

        }
      },
      error: function(xhr, status, error) {
        Swal.fire("Error!", "Fialed to update address", "error");
      }
    });
  });
</script>

<!-- upload image -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
    var photoUpload = document.getElementById('photoUpload');
    var userPhoto = document.getElementById('userPhoto');

    photoUpload.addEventListener('change', function(event) {
      var file = event.target.files[0];
      var reader = new FileReader();

      reader.onload = function(e) {
        userPhoto.src = e.target.result;
      }

      reader.readAsDataURL(file);
    });
  });
</script>


<!-- edit profile -->
<script>
  const form = document.getElementById('profileForm');

  form.addEventListener('submit', (event) => {
    event.preventDefault();
    const userId = document.getElementById('userID').value;
    const formData = new FormData(form);

    fetch('/editProfile', {
        method: 'PATCH',
        body: formData
      })
      .then(response => {
        if (!response.ok) {
          return response.json().then(err => {
            throw new Error(err.message || 'An error occurred');
          });
        }
        return response.json();
      })
      .then(data => {
        if (data.success) {
          fetch(`/userProfile?id=${userId}`)
            .then(response => response.text())
            .then(() => {
              toastr.success(data.message, "Success!");
              window.location.reload()
            });
        } else {
          toastr.error(data.message, "Info!");
        }
      })
      .catch(error => {
        toastr.error("An error occurred while updating profile", "Error!");
      });
  });
</script>

<!-- orderList -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const tableBody = document.querySelector('#table_body');
    tableBody.addEventListener('click', function(event) {

      if (event.target.classList.contains('view-order-btn')) {
        event.preventDefault();
        const orderId = event.target.dataset.orderId;

        // AJAX call should be inside this block
        $.ajax({
          url: '/orderPlaced/orderList',
          type: 'POST',
          data: JSON.stringify({
            orderId: orderId
          }),
          contentType: 'application/json',
          success: function(response) {

            document.querySelector('#orderTrackingModal .order-id').textContent = response.orderData.orderId;
            document.querySelector('#orderTrackingModal .order-date').textContent = response.orderData.orderedDate;
            const totalQuantity = response.orderData.products.reduce((total, product) => {
              return total + product.quantity;
            }, 0);
            document.querySelector('#orderTrackingModal .product-payment').textContent = response.orderData.payment;
            document.querySelector('#orderTrackingModal .order-delivery').textContent = response.orderData.expectedDelivery;
            document.querySelector('#orderTrackingModal .order-processing').textContent = response.orderData.orderStatus;
            const cancelButton = document.getElementById('cancelBtn');
            cancelButton.setAttribute('data-order-id', response.orderData._id);
            cancelButton.setAttribute('data-order-status', response.orderData.orderStatus);
            const orderStatus = cancelButton.getAttribute('data-order-status');
            const returnButton = document.getElementById('returnBtn');
            returnButton.setAttribute('data-return', response.orderData._id);
            returnButton.setAttribute('data-product-id', response.orderData.products)
            const retryButton = document.getElementById('retryBtn');
            retryButton.setAttribute('data-retry-id', response.orderData._id);
            retryButton.setAttribute('data-retry-status', response.orderData.paymentStatus)
            const paymentStatus = retryButton.getAttribute('data-retry-status');
            const invoiceButton = document.getElementById('invoiceBtn');
            invoiceButton.setAttribute('data-invoice-id', response.orderData._id);



            if (orderStatus && orderStatus === 'Delivered') {
              returnButton.hidden = false;
              invoiceButton.hidden = false;
              cancelButton.hidden = true;
            } else {
              returnButton.hidden = true;
              invoiceButton.hidden = true;
            }

            if (orderStatus && orderStatus === 'Cancelled' || orderStatus === 'Returned') {
              cancelButton.hidden = true;
              retryButton.hidden = true;
            }


            if (paymentStatus && paymentStatus === 'Pending') {
              retryButton.hidden = false;
            } else {
              retryButton.hidden = true;
            }

            if (orderStatus && orderStatus === 'Cancelled') {
              retryButton.hidden = true;
            }

            const orderData = response.orderData;

            const tableBody = document.querySelector('.tracker-table tbody');

            tableBody.innerHTML = '';

            orderData.products.forEach(product => {
              const newRow = document.createElement('tr');

              newRow.innerHTML = `<td>
            <h6 class="product-name">${product.product.name}</h6>
        </td>
        <td>
            <h6 class="product-quantity">${product.quantity}</h6>
        </td>
        <td>
            <p class="product-price">${product.price}</p>
        </td>
        <td>
            <h6 class="sub-total">${product.quantity * product.price}</h6>
        </td>`;
              tableBody.appendChild(newRow);
            })
            // Show the modal
            $('#orderTrackingModal').modal('show');
          },
          error: function(error) {
            console.error('Error fetching order details:', error);
          }
        });
      }
    });


    // Attach click event listener to the #invoiceBtn element
    $(document).on('click', '#invoiceBtn', function() {
      const invoiceButton = $(this);
      const orderId = invoiceButton.data('invoice-id');
      const url = '/orderPlaced/downloadInvoice?id=' + orderId;

      $.ajax({
        url: url,
        method: 'POST',
        xhrFields: {
          responseType: 'blob'
        },
        success: function(data) {

          const blob = new Blob([data], {
            type: 'application/pdf'
          });
          const blobUrl = window.URL.createObjectURL(blob);
          const a = document.createElement('a');
          a.style.display = 'none';
          a.href = blobUrl;
          a.download = 'report.pdf';
          document.body.appendChild(a);
          a.click();

          window.URL.revokeObjectURL(blobUrl);
        },
        error: function(jqXHR, textStatus, errorThrown) {
          console.error('Error downloading orders:', errorThrown);
        }
      });
    });

    //return order
    $(document).on('click', '#returnBtn', function() {
      const returnButton = $(this);
      const orderId = returnButton.data('return');

      const returnReasons = {
        'Damaged Goods': 'Damaged Goods',
        'Wrong Item': 'Wrong Item',
        'No Reason': 'No Reason',
      };
      Swal.fire({
        title: "Are you sure?",
        text: "You want to be Return this!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#000000",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes, Return it!",
        input: 'select',
        inputOptions: returnReasons,
        inputPlaceholder: "Select ",
        inputValidator: (value) => {
          if (!value) {
            return 'Please select a reason for return.';
          }
        },
        customClass: {
          input: 'custom-swal-input'
        }
      }).then((result) => {
        if (result.isConfirmed) {
          const returnReason = result.value;
          $.ajax({
            url: '/orderPlaced/orderReturn',
            method: 'POST',
            data: {
              orderId: orderId,
              returnReason: returnReason
            },
            success: function(response) {
              if (response.success) {
                Swal.fire("Success!", response.message, "success")
                  .then((value) => {
                    if (value) {
                      window.location.href = '/userProfile';
                    }
                  });
              } else {
                Swal.fire("Warning!", response.message, "Warning")
                  .then((value) => {
                    if (value) {
                      window.location.href = '/userProfile';
                    }
                  });
              }
            },
            error: function(jqXHR, textStatus, errorThrown) {
              // Handle errors here
              console.error("AJAX Error:", textStatus, errorThrown);
              Swal.fire("Error!", "An error occurred while processing your request.", "error");
            }
          });
        }
      });
    });

    // Retry payment
    $(document).on('click', '#retryBtn', function() {
      const retryButton = $(this);
      const orderId = retryButton.data('retry-id');
      Swal.fire({
        title: "Are you sure?",
        text: "You want to be Retry the Payment!",
        icon: "info",
        showCancelButton: true,
        confirmButtonColor: "#000000",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes Retry!"
      }).then((result) => {
        if (result.isConfirmed) {
          $.ajax({
            url: '/orderPlaced/retryPayment',
            method: 'POST',
            data: {
              orderId: orderId
            },
            success: function(response) {
              if (response) {
                razorPayPayment(response.order);
              }
            },
            error: function(jqXHR, textStatus, errorThrown) {}
          });
        }
      });
    });

    //RETRY RAZORPAY
    function razorPayPayment(order) {
      var options = {
        "key": "rzp_test_PIjycoYDuhOYTG",
        "amount": order.amount,
        "currency": "INR",
        "name": "Belle",
        "description": "Test Transaction",
        "image": "http://127.0.0.1:3000/public/images/favicon.png",
        "order_id": order.id,
        // "callback_url": "https://eneqd3r9zrjok.x.pipedream.net/",
        "handler": function(response) {
          verifyRetryPayment(response, order)
        },
        "prefill": {
          "name": "Gaurav Kumar",
          "email": "gaurav.kumar@example.com",
          "contact": "9000090000"
        },
        "notes": {
          "address": "Razorpay Corporate Office"
        },
        "theme": {
          "color": "#99cc33"
        }
      };
      var rzp1 = new Razorpay(options);
      rzp1.on('payment.failed', function(response) {
        window.location.href = '/userProfile?paymentFailed=true';
      });

      rzp1.open();

    }

    //verify retry payment
    function verifyRetryPayment(response, order) {
      var settings = {
        "url": "/orderPlaced/paymentRetryVerify",
        "method": "POST",
        "timeout": 0,
        "headers": {
          "Content-Type": "application/json"
        },
        "data": JSON.stringify({
          orderId: order.id,
          paymentId: response.razorpay_payment_id,
          signature: response.razorpay_signature,
          newOrderId: order.receipt,
        }),
      };
      $.ajax(settings).done(function(data) {
        if (data.success) {
          toastr.success(data.message, "Success!");
          window.location.reload();
        } else {
          alert("Payment verification failed. please try again.")
        }
      }).fail(function(jqXHR, textStatus, errorThrown) {
        console.error(("Error verifying Payment", textStatus, errorThrown));
        alert("An error occurred while verifying your payment. Please try again.")
      })
    }


    //cancel order
    $(document).on('click', '#cancelBtn', function() {
      const cancelButton = $(this);
      const result = Swal.fire({
        title: "Are you sure?",
        text: "You won't be able to revert this!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#000000",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes, cancel it!"
      }).then((result) => {
        if (result.isConfirmed) {
          const orderId = cancelButton.data('order-id');

          $.ajax({
            url: '/orderPlaced/orderCancel',
            method: 'POST',
            data: {
              orderId: orderId
            },
            success: function(response) {
              if (response.success) {
                Swal.fire("Success!", response.message, "success")
                  .then((value) => {
                    if (value) {
                      window.location.href = '/userProfile';
                    }
                  });
              } else {
                Swal.fire("Warning!", response.message, "Warning")
                  .then((value) => {
                    if (value) {
                      window.location.href = '/userProfile';
                    }
                  });
              }
            },
            error: function(xhr, status, error) {
              Swal.fire("Error!", "Failed to cancel the order.", "error");
            }
          });
        }
      });
    });
  });
</script>

<!-- pagination for order list -->
<script>
  let currentPageNo = 1;
  let itemsPerPage = 5;
  let currentPageOrders = [];

  function fetchOrders(page) {

    fetch(`/orderPlaced/pagination?page=${page}&itemsPerPage=${itemsPerPage}`)
      .then(response => response.json())
      .then(data => {
        currentPageOrders = data.orders;
        updateTable(data.orders);
        updatePagination(data.totalPages, data.currentPage);
      })
  }

  function updateTable(orders) {
    const tableBody = document.querySelector('#table_body');
    tableBody.innerHTML = '';
    orders.forEach(order => {
      const newRow = document.createElement('tr');
      newRow.innerHTML = `
      <td class="order-number"><a href="#">${order.orderId}</a></td>
      <td class="order-date"><time>${order.orderedDate}</time></td>
      <td class="order-status"><span>${order.orderStatus}</span></td>
      <td class="order-status"><span>${order.paymentStatus}</span></td>
      <td class="order-total">
        <span class="highlight-price" style="font-size: 15px;">â‚¹${order.orderTotal}</span> for
        <span class="highlight-quantity">${order.products.length}</span> items
      </td>
      <td class="order-action">
        <button type="button" class="btn btn-primary btn-link btn-underline view-order-btn" data-toggle="modal" data-target="#orderTrackingModal" data-order-id="${order.orderId}">View</button>
      </td>
    `;

      tableBody.appendChild(newRow);
    });
  }

  function updatePagination(totalPages, currentPage) {
    const prevPageBtn = document.getElementById('prevPage');
    const nextPageBtn = document.getElementById('nextPage');
    const pageInfo = document.getElementById('pageInfo');

    if (currentPage === 1) {
      prevPageBtn.disabled = true;
    } else {
      prevPageBtn.disabled = false
    }
    if (currentPage === totalPages) {
      nextPageBtn.disabled = true;
    } else {
      nextPageBtn.disabled = false;
    }
    pageInfo.textContent = `Page ${currentPage} of ${totalPages}`;
  }
  document.getElementById('prevPage').addEventListener('click', () => {
    if (currentPageNo > 1) {
      currentPageNo--;
      fetchOrders(currentPageNo);
    }
  });
  document.getElementById('nextPage').addEventListener('click', () => {

    currentPageNo++;
    fetchOrders(currentPageNo);

  });
  fetchOrders(currentPageNo);


  function searchOrders() {
    const searchInput = document.getElementById('searchOrderId');
    const searchValue = searchInput.value.trim().toLowerCase();

    const filteredOrders = currentPageOrders.filter(order => order.orderId.toLowerCase().includes(searchValue));
    updateTable(filteredOrders);

  }

  document.getElementById('searchOrderId').addEventListener('input', searchOrders);
</script>


<!-- add money to wallet -->
<script>
  toastr.options = {
    "closeButton": false,
    "debug": false,
    "newestOnTop": true,
    "progressBar": false,
    "positionClass": "toast-top-right",
    "preventDuplicates": false,
    "onclick": null,
    "showDuration": "300",
    "hideDuration": "1000",
    "timeOut": "5000",
    "extendedTimeOut": "1000",
    "showEasing": "swing",
    "hideEasing": "linear",
    "showMethod": "fadeIn",
    "hideMethod": "fadeOut"
  };

  function openRazorpayCheckout() {
    const enteredAmount = document.getElementById('enteredMoney').value
    const amount = parseInt(enteredAmount) * 100;
    if (!amount || amount < 0) {
      toastr.error("Enter a valid amount", "Info!");
      return;
    }
    $.ajax({
      url: '/userProfile/wallet',
      type: 'POST',
      data: {
        amount
      },
      success: (response) => {
        if (response) {
          razorPayPayment(response.order);
        }
      }
    })
  }

  function razorPayPayment(order) {
    var options = {
      "key": "rzp_test_PIjycoYDuhOYTG",
      "amount": order.amount,
      "currency": "INR",
      "name": "Belle",
      "description": "Test Transaction",
      "image": "http://127.0.0.1:3000/public/images/favicon.png",
      "order_id": order.id,
      // "callback_url": "https://eneqd3r9zrjok.x.pipedream.net/",
      "handler": function(response) {
        verifyPayment(response, order)
      },
      "prefill": {
        "name": "Gaurav Kumar",
        "email": "gaurav.kumar@example.com",
        "contact": "9000090000"
      },
      "notes": {
        "address": "Razorpay Corporate Office"
      },
      "theme": {
        "color": "#99cc33"
      }
    };
    var rzp1 = new Razorpay(options);
    rzp1.on('payment.failed', function(response) {
      window.location.href = '/Cart?paymentFailed=true';
    });

    rzp1.open();

  }

  function verifyPayment(response, order) {
    var settings = {
      "url": "/userProfile/paymentVerify",
      "method": "POST",
      "timeout": 0,
      "headers": {
        "Content-Type": "application/json"
      },
      "data": JSON.stringify({
        orderId: order.id,
        paymentId: response.razorpay_payment_id,
        signature: response.razorpay_signature,
        transactionId: order.receipt,
        Amount: order.amount
      }),
    };
    $.ajax(settings).done(function(data) {
      if (data.success) {
        alert(data.message)
        window.location.reload();
      } else {
        alert("Payment verification failed. please try again.")
      }
    }).fail(function(jqXHR, textStatus, errorThrown) {
      console.error(("Error verifying Payment", textStatus, errorThrown));
      alert("An error occurred while verifying your payment. Please try again.")
    })
  }
</script>


<!-- referal-offer -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const referralLink = document.getElementById('refferalLink');

    referralLink.addEventListener('click', function(event) {
      event.preventDefault();
      axios.get('/userProfile/refferal-offer')
        .then(function(response) {
          if (response.success) {
            const link = response.data.link;
            navigator.clipboard.writeText(link)
              .then(() => {
                alert(response.data.message);
              })
          } else {
            const link = response.data.link;
            navigator.clipboard.writeText(link)
              .then(() => {
                alert(response.data.message);
              })
          }
        })
        .catch(function(error) {
          console.error('Error:', error);
        });
    });
  });
</script>


<!-- pagination for wallet -->
<script>
  let currentPageNoOfWallet = 1;
  let itemsPerPageOfWallet = 4;

  function fetchTransactions(page) {
    fetch(`/userProfile/wallet/pagination?page=${page}&itemsPerPage=${itemsPerPageOfWallet}`)
      .then(response => response.json())
      .then(data => {
        updateTableOfWallet(data.transactions);
        updatePaginationOfWallet(data.totalPages, data.currentPage);
      })
  }

  function updateTableOfWallet(transactions) {
    const tableBody = document.querySelector('#wallet_table_body');
    tableBody.innerHTML = '';

    transactions.forEach(transaction => {
      if (transaction.description !== "Initial balance") {
        const newRow = document.createElement('tr');
        newRow.innerHTML = `
         <td class="transaction-id"><a href="#">#${transaction.transactionId}</a></td>
         <td class="transaction-date"><time>${new Date(transaction.date).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}</time></td>
         <td class="transaction-type"><span>${transaction.transactionType}</span></td>
         <td class="transaction-amount"><span class="highlight-price" style="font-size: 15px;">â‚¹${transaction.amount}</span></td>
         <td class="transaction-status"><span>${transaction.description}</span></td>
         `;
        tableBody.appendChild(newRow);
      }
    });
  }

  function updatePaginationOfWallet(totalPages, currentPage) {
    const prevPageBtnOfWallet = document.getElementById('prevPageOfWallet');
    const nextPageBtnOfWallet = document.getElementById('nextPageOfWallet');
    const pageInfoOfWallet = document.getElementById('pageInfoOfWallet');

    if (currentPage === 1) {
      prevPageBtnOfWallet.disabled = true;
    } else {
      prevPageBtnOfWallet.disabled = false;
    }
    if (currentPage === totalPages) {
      nextPageBtnOfWallet.disabled = true;
    } else {
      nextPageBtnOfWallet.disabled = false;
    }
    pageInfoOfWallet.textContent = `Page ${currentPage} of ${totalPages}`;
  }

  document.getElementById('prevPageOfWallet').addEventListener('click', () => {
    if (currentPageNo > 1) {
      currentPageNo--;
      fetchTransactions(currentPageNo);
    }
  });

  document.getElementById('nextPageOfWallet').addEventListener('click', () => {
    currentPageNo++;
    fetchTransactions(currentPageNo);
  });

  fetchTransactions(currentPageNoOfWallet);
</script>

<!-- displaying the message from the checkout -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const urlParams = new URLSearchParams(window.location.search);
    const paymentFailed = urlParams.get('paymentFailed');

    if (paymentFailed === 'true') {
      toastr.error('Payment Failed. Please try again.', 'Info!');
    }
  });
</script>

<%- include('../layouts/footer.ejs') -%>